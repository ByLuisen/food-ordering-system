server:
  port: 8184

customer-service:
  customer-topic-name: customer

spring:
  jpa:
    open-in-view: false
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: jdbc:postgresql://${DATASOURCE_URL:localhost:5432}/postgres?currentSchema=customer&binaryTransfer=true&reWriteBatchedInserts=true
    username: postgres
    password: admin
    driver-class-name: org.postgresql.Driver
  sql:
    init:
      mode: always
      schema-locations: classpath:init-schema.sql

kafka-config:
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:19092, localhost:29092, localhost:39092}
  schema-registry-url-key: schema.registry.url
  schema-registry-url: ${KAFKA_SCHEMA_REGISTRY_URL:http://localhost:18081}
  num-of-partition: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.StringSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: snappy
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5